//
// Generated file, do not edit! Created by opp_msgtool 6.1 from Evento.msg.
//

#ifndef __EVENTO_M_H
#define __EVENTO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class Evento;
/**
 * Class generated from <tt>Evento.msg:16</tt> by opp_msgtool.
 * <pre>
 * message Evento extends cMessage
 * {
 *     string codigo;
 *     int64 inicio;
 *     int64 fin;
 * }
 * </pre>
 */
class Evento : public ::omnetpp::cMessage
{
  protected:
    omnetpp::opp_string codigo;
    int64_t inicio = 0;
    int64_t fin = 0;

  private:
    void copy(const Evento& other);

  protected:
    bool operator==(const Evento&) = delete;

  public:
    Evento(const char *name=nullptr, short kind=0);
    Evento(const Evento& other);
    virtual ~Evento();
    Evento& operator=(const Evento& other);
    virtual Evento *dup() const override {return new Evento(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual const char * getCodigo() const;
    virtual void setCodigo(const char * codigo);

    virtual int64_t getInicio() const;
    virtual void setInicio(int64_t inicio);

    virtual int64_t getFin() const;
    virtual void setFin(int64_t fin);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Evento& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Evento& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline Evento *fromAnyPtr(any_ptr ptr) { return check_and_cast<Evento*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __EVENTO_M_H

